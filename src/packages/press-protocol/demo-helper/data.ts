import { parseProtocol } from 'src/packages/common/protocol/parse-protocol';


const MOCK_DATA = [
  {
    title: '一、序言',
    list: [
      [
        '1、“Press UI组件库”（以下简称 Press UI）是基于uni-app的跨端组件库，旨在',
        {
          text: '提升开发效率、沉淀业务组件',
          light: true,
        },
        '，为开发者提供易用、灵活、高性能的组件库。',
      ],
      '2、为规范用户行为，保障用户的合法权益，提升产品服务信息质量，特制定本规范。',
      [
        '3、本规范适用于所有使用者。',
        {
          text: '用户不得是未满18周岁的未成年人。',
          light: true,
        },
      ],
    ],
  },
  {
    title: '二、隐私政策',
    list: [
      [
        '您可以填写',
        {
          light: true,
          text: '个人信息保护和隐私问题反馈问卷',
          link: 'https://privacy.qq.com/questionnaire',
        },
        '与我们联系。',
      ],
    ],
  },
  {
    title: '三、功能介绍',
    list: [
      '1. 70+ 基础组件，覆盖移动端主流场景',
      '2. 支持基于 uni-app 的 H5、微信小程序、QQ小程序',
      '3. 支持普通H5项目',
      '4. 支持 Vue2 和 Vue3',
      '5. 零外部依赖，不依赖三方 npm 包',
      '6. 提供丰富的中英文文档和组件示例',
      '7. 支持主题定制，内置 600+ 个主题变量',
      '8. 支持国际化，内置 16+ 种语言包',
    ],
  },
  {
    title: '四、解决痛点',
    list: [
      ' Press UI 作为基础组件库，解决了以下痛点：',
      '1. 支持包含 vant 的 H5 项目平滑迁移至 uni-app 项目，仅需改下引用地址和组件名称',
      '2. 丰富的组件类型，以及易用的API，让 uni-app 开发变得简单',
      '3. 支持国际化、主题定制等，组件灵活性更强',
      '4. 支持普通Vue项目，达到一套代码 n+1 端复用',
      '同时，将项目中业务组件沉淀到 Press UI 中，有以下好处：',
      [
        '1. ',
        {
          light: true,
          text: '减少业务和组件的耦合，降低各自复杂度',
        },
        '，并减少bug',
      ],
      [
        '2. ',
        {
          light: true,
          text: '增强组件可维护性',
        },
        '，提升开发效率',
      ],
      '  通过整理代码，合并属性，分离业务逻辑等，让组件变纯粹，增强可维护性，进而提升效率',
      [
        '3. ',
        {
          light: true,
          text: '封装核心逻辑，控制变化',
        },
      ],
      '  不用担心外部合作人员改乱代码，以及解决冲突时的覆盖问题',
      [
        '4. ',
        {
          light: true,
          text: 'UI问题定位简单',
        },
      ],
      '  三端代码同时发布，以及多种类型的示例，覆盖面全，容易发现UI问题，以及三端表现不一致问题',
      '5. 可提升性能',
      '  通过示例中的自定义变量，可定位性能瓶颈，并解决性能问题',
      '6. 提高可复用性，可应用到其他项目',
      '7. 技术沉淀，技术积累，不断打磨组件细节',
    ],
  },
];


export function getMockProtocol() {
  const res =  parseProtocol(MOCK_DATA);
  return res;
}
